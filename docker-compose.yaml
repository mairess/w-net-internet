services:

  backend:
    build: .
    container_name: wnet_backend
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      POSTGRES_HOST: database
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - wnet-net

  database:
    image: postgres
    container_name: wnet_database
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wnetdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 10s
      retries: 5
    networks:
      - wnet-net

  zookeeper:
    container_name: zookeeper
    image: "bitnami/zookeeper:latest"
    networks:
      - wnet-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_HOST_NAME: "localhost"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - wnet-net

networks:
  wnet-net:
    driver: bridge